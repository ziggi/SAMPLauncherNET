<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="animationTimer.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        SDNMTFxcYmJMEWNkAAAAAERKODdXJgAANwAEXSoOXlY3AAAAAAAASDdeWw4AAAAAT0VXUBdPAAAAAEsP
        Kx1cSwAAAAAAAABQRkgQEQAAAABWJllVGCcAAAAAAFpbEEMAAAAAAAAAVlJHSjMxAAAAAABXA1BXJ1ZJ
        BEo3N0FYSwAAAAA3SlNTUEdGS0sAAAAANhdUF09OVVFRVVNKADdTMzdWBFVSUlVQR0ZISAAAAABOTyVE
        T09QUVJTSkpLS0hKRklJRlNKU1NKS0s/AAAAAERFBEYiR0hJSgA3S0pKSEs3SEhIN0hLADdMOE0AAAAA
        AjU2NxgiODk6Ozw9Li4+PD86QDFBHkJDOTIyMQAAAAAbAiUmFycoKSorLCwsKgotLh8vMC8fLzEQMjM0
        AAAAABUCBhYXGBkaGwYSCRwcDREMDh0eHx4QICEiIyQAAAAAAQIDBAEBBQYHBggJCgsMDQ4ODw8PDxAR
        EhMUEwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA
</value>
  </data>
</root>